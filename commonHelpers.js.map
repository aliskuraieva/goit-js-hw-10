{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputField = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nstartBtn.addEventListener('click', startTimer);\n\nlet userSelectedDate = null;\nlet timer = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      return iziToast.error({\n        position: 'topRight',\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    }\n    userSelectedDate = selectedDates[0];\n    startBtn.disabled = false;\n  },\n};\n\nflatpickr(inputField, options);\n\nfunction startTimer() {\n  inputField.disabled = true;\n  startBtn.disabled = true;\n\n  timer = setInterval(updateTimer, 1000);\n  return;\n}\n\nfunction updateTimer() {\n  const timeDiff = userSelectedDate - new Date();\n\n  if (timeDiff <= 0) {\n    inputField.disabled = false;\n    clearInterval(timer);\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDiff);\n\n  daysSpan.textContent = String(days).padStart(2, 0);\n  hoursSpan.textContent = String(hours).padStart(2, 0);\n  minutesSpan.textContent = String(minutes).padStart(2, 0);\n  secondsSpan.textContent = String(seconds).padStart(2, 0);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// const inputField = document.querySelector('#datetime-picker');\n// const startBtn = document.querySelector('button[data-start]');\n// const daysSpan = document.querySelector('span[data-days]');\n// const hoursSpan = document.querySelector('span[data-hours]');\n// const minutesSpan = document.querySelector('span[data-minutes]');\n// const secondsSpan = document.querySelector('span[data-seconds]');\n\n// startBtn.addEventListener('click', startTimer);\n\n// let userSelectedDate = null;\n// let timer = null;\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//     console.log(selectedDates[0]);\n//     if (options.defaultDate >= selectedDates[0]) {\n//       startBtn.disabled = true;\n//       // підключаємо повідомлення невдалого вибору\n//       iziToast.error({\n//         title: 'Error',\n//         message: 'Please choose a date in the future',\n//       });\n//     } else {\n//       startBtn.disabled = false; // Дозволяємо натискати кнопку Start, якщо вибрано правильну дату\n//       userSelectedDate = selectedDates[0];\n//       // підключаємо повідомлення вдалого вибору\n//       iziToast.success({\n//         title: 'OK',\n//         message: 'You can press \"Start\"',\n//       });\n//     }\n//   },\n// };\n\n// flatpickr(inputField, options);\n\n// // форматуємо рядок; додаємо два нулі на початок рядка, що відображалось так 00Х\n// const addLeadingZero = value => value.toString().padStart(2, '0');\n\n// startBtn.addEventListener('click', startTimer);\n\n// function startTimer() {\n//   startBtn.disabled = true;\n//   inputField.disabled = true;\n\n//   timer = setInterval(() => {\n//     const currentDate = new Date();\n//     const timeDiff = userSelectedDate - currentDate;\n\n//     const { days, hours, minutes, seconds } = convertMs(timeDiff);\n\n//     daysSpan.textContent = addLeadingZero(days);\n//     hoursSpan.textContent = addLeadingZero(hours);\n//     minutesSpan.textContent = addLeadingZero(minutes);\n//     secondsSpan.textContent = addLeadingZero(seconds);\n\n//     if (timeDiff <= 0) {\n//       clearInterval(timer);\n//       inputField.disabled = false;\n\n//       daysSpan.textContent = '00';\n//       hoursSpan.textContent = '00';\n//       minutesSpan.textContent = '00';\n//       secondsSpan.textContent = '00';\n//       return;\n//     }\n//   }, 1000);\n// }\n\n// function convertMs(ms) {\n//   // Number of milliseconds per unit of time\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   // Remaining days\n//   const days = Math.floor(ms / day);\n//   // Remaining hours\n//   const hours = Math.floor((ms % day) / hour);\n//   // Remaining minutes\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   // Remaining seconds\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["inputField","startBtn","daysSpan","hoursSpan","minutesSpan","secondsSpan","startTimer","userSelectedDate","timer","options","selectedDates","iziToast","flatpickr","updateTimer","timeDiff","days","hours","minutes","seconds","convertMs","ms"],"mappings":"yIAKA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DJ,EAAS,iBAAiB,QAASK,CAAU,EAE7C,IAAIC,EAAmB,KACnBC,EAAQ,KAEZ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,GAAK,IAAI,KAC1B,OAAOC,EAAS,MAAM,CACpB,SAAU,WACV,MAAO,QACP,QAAS,oCACjB,CAAO,EAEHJ,EAAmBG,EAAc,CAAC,EAClCT,EAAS,SAAW,EACrB,CACH,EAEAW,EAAUZ,EAAYS,CAAO,EAE7B,SAASH,GAAa,CACpBN,EAAW,SAAW,GACtBC,EAAS,SAAW,GAEpBO,EAAQ,YAAYK,EAAa,GAAI,CAEvC,CAEA,SAASA,GAAc,CACrB,MAAMC,EAAWP,EAAmB,IAAI,KAExC,GAAIO,GAAY,EAAG,CACjBd,EAAW,SAAW,GACtB,cAAcQ,CAAK,EACnB,MACD,CAED,KAAM,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAE5DZ,EAAS,YAAc,OAAOa,CAAI,EAAE,SAAS,EAAG,CAAC,EACjDZ,EAAU,YAAc,OAAOa,CAAK,EAAE,SAAS,EAAG,CAAC,EACnDZ,EAAY,YAAc,OAAOa,CAAO,EAAE,SAAS,EAAG,CAAC,EACvDZ,EAAY,YAAc,OAAOa,CAAO,EAAE,SAAS,EAAG,CAAC,CACzD,CAEA,SAASC,EAAUC,EAAI,CAQrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CA8FA,QAAQ,IAAIC,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}